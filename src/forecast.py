import random
import copy

def 吃我一矛(自己,对手,回合数,回合状态,伤害):
    if 回合数 % 2 == 0 and 自己['名字']=='琪亚娜' and 回合状态 == '攻击中':
        自己['攻击力']+=对手['防御力']*2
        伤害=自己['攻击力']-对手['防御力']
        对手技能1结果 = 对手['技能1'](自己,对手,回合数,回合状态,伤害)
        对手技能2结果 = 对手['技能2'](自己,对手,回合数,回合状态,伤害)
        if 1 == 对手技能1结果 or 1 == 对手技能2结果:
            伤害=0
        if 伤害 > 0:
            对手['生命值']-=伤害
        自己['攻击力']-=对手['防御力']*2
        print(f'琪亚娜使用吃我一矛对对手造成{伤害}点伤害')
        return 1
    else:
        return 0
def 音浪太强(自己,对手,回合数,回合状态,伤害):
    if 回合数 % 2 == 0 and 自己['名字']=='琪亚娜' and 回合状态 == '攻击后':
        r=random.uniform(0,100)
        if r <= 35:
            自己['状态']='眩晕'
            print('琪亚娜眩晕了')
            return 1
    else:
        return 0
def 崩坏世界的歌姬(自己,对手,回合数):
    if not 回合数 % 2 == 0:
        r=random.uniform(0,100)
        if r <= 30:
            对手['状态']='麻痹'
            return 0
def 雷电家的龙女仆(自己,对手,回合数):
    if 回合数 % 2 == 0:
        伤害=5*3
        对手['生命值']-=伤害
        return 1
    else:
        return 0
def 八重樱的饭团(自己,对手,回合数):
    r=random.uniform(0,100)
    if r <= 30:
        自己['生命值']+=25
        print("使用八重樱饭团恢复25点生命值")
    return 0
def 卡莲的饭团(自己,对手,回合数):
    if 回合数 % 2 == 0:
        对手['生命值']-=25
        print("使用卡莲饭团对对手造成25点伤害")
        return 1
    else:
        return 0
def 我换我自己(自己,对手,回合数):
    if(自己['人格']=='白'):
        自己['人格']='黑'
    elif 自己['人格']=='黑':
        自己['人格']='白'
    return 0

def 拜托了另一个我(自己,对手,回合数):
    if(自己['人格']=='白'):
        自己['攻击力']-=10
        自己['防御力']+=5
        r = int(random.uniform(1,15))
        自己['生命值']+=r
        print(f"转变白希儿恢复{r}点生命值")
    elif 自己['人格']=='黑':
        自己['攻击力']+=10
        自己['防御力']-=5
        print("转变为黑希儿")
    return 0

def 天使重构(自己,对手,回合数):
    r=random.uniform(0,100)
    if r <= 25:
        伤害=4*(12-对手['防御力'])
        if 伤害 > 0:
            对手['生命值']-=伤害
            print(f"使用天使重构造成{伤害}点伤害")
            return 0
    else:
        return 0
def 摩托拜客哒(自己,对手,回合数):
    if 回合数 % 3 == 0:
        伤害 = int(random.uniform(1,100))
        对手['生命值']-=伤害
        print(f"摩托拜客哒对对手造成{伤害}点伤害")
        return 1
    else:
        return 0
def _96度生命之水(自己,对手,回合数,回合状态,伤害):
    if (回合状态=='伤害计算后' or 回合状态=='攻击中') and 对手['名字']=='阿琳姐妹':
        if 对手['濒死'] == 0 and 对手['生命值'] < 0:
            对手['生命值']=20
            对手['濒死']=1
            return 0
        return 0
    return 0
        

def 变成星星吧(自己,对手,回合数,回合状态,伤害):
    if 回合状态=='攻击中' and 自己['名字']=='阿琳姐妹':
        if 自己['濒死']==1:
            自己['濒死']=2
            r=random.uniform(0,100)
            if r <= 50:
                伤害=233
            else:
                伤害=50
            对手技能1结果 = 对手['技能1'](自己,对手,回合数,回合状态,伤害)
            对手技能2结果 = 对手['技能2'](自己,对手,回合数,回合状态,伤害)
            if 1 == 对手技能1结果 or 1 == 对手技能2结果:
                伤害=0
            对手['生命值']-=伤害
            print(f"阿琳双子使用变成星星吧对对方造成{伤害}点伤害")
            return 1
    else:
        return 0
def 摸鱼的快乐(自己,对手,回合数,回合状态,伤害):
    if 回合状态=='攻击前' and 自己['名字']=='幽兰黛儿':
        自己['攻击力']+=3
        print(f'{自己["名字"]}攻击力增加了3')
    return 0
def 反弹反弹无效(自己,对手,回合数,回合状态,伤害):
    if 回合状态=='攻击中' and 对手['名字']=='幽兰黛儿' and not 0 == 伤害:
        r=random.uniform(0,100)
        if r <= 16:
            print("幽兰戴尔使用了反弹反弹无效的技能无效了对方的必杀技")
            return 1
        else:
            return 0
    else:
        return 0
def a():
    pass


角色模板 = {'名字':'','攻击力':0,'防御力':0,'速度':0,'技能1':'','技能2':''}
琪亚娜 = {'名字':'琪亚娜','攻击力':24,'防御力':11,'速度':23,'技能1':吃我一矛,'技能2':音浪太强}
芽衣 = {'名字':'芽衣','攻击力':22,'防御力':12,'速度':30,'技能1':崩坏世界的歌姬,'技能2':雷电家的龙女仆}
樱莲组 = {'名字':'樱莲组','攻击力':20,'防御力':9,'速度':18,'技能1':八重樱的饭团,'技能2':卡莲的饭团}
希儿 = {'名字':'希儿','攻击力':23,'防御力':13,'速度':26,'技能1':我换我自己,'技能2':拜托了另一个我,'人格':'白'}
布洛妮娅 = {'名字':'布洛妮娅','攻击力':21,'防御力':10,'速度':20,'技能1':天使重构,'技能2':摩托拜客哒}
阿琳姐妹 = {'名字':"阿琳姐妹",'攻击力':18,'防御力':10,'速度':10,'技能1':_96度生命之水,'技能2':变成星星吧,'濒死':0}
幽兰黛儿 = {'名字':'幽兰黛儿','攻击力':19,'防御力':10,'速度':15,'技能1':摸鱼的快乐,'技能2':反弹反弹无效}
#丽塔 = {'名字':'丽塔','攻击力':26,'防御力':11,'速度':17,'技能1':女仆的温柔清理,'技能2':完美心意}
#德莉莎 = {'名字':'德莉莎','攻击力':19,'防御力':12,'速度':22,'技能1':血犹大第一可爱,'技能2':在线踢人}
#符华 = {'名字':'符华','攻击力':17,'防御力':15,'速度':16,'技能1':凭神化剑,'技能2':行之笔墨}

# def 随机测试():
#     c=1000000
#     cc = 0
#     print(f"随机{c}次")
#     for i in range(c):
#         r=random.uniform(0,100)
#         if r <= 35:
#             cc+=1
#     if cc == 0:
#         print("出现错误")
#         return
#     print(f"在{c}次里，有{cc}次命中，概率是{cc/c}")

def 技能处理(自己,对手,回合数,回合状态):
    #回合状态分发到各个技能
    ss1 = 自己['技能1'](自己,对手,回合数,回合状态,0)
    ss2 = 自己['技能2'](自己,对手,回合数,回合状态,0)
    对手['技能1'](自己,对手,回合数,回合状态,0)
    对手['技能2'](自己,对手,回合数,回合状态,0)
    return 1 if (1 == ss1 or 1 == ss2) else 0

def 回合处理(自己,对手,回合数):
    #负面状态回合结束
    if not 自己['状态'] == '':
        自己['状态'] = ''
        return

    #回合开始前，技能
    ss1 = 技能处理(自己,对手,回合数,'攻击前')
    #回合中，技能
    ss2 = 技能处理(自己,对手,回合数,'攻击中')
    ss3 = 技能处理(自己,对手,回合数,'攻击后')
    # s1=自己['技能1'](自己,对手,回合数)
    # s2=自己['技能2'](自己,对手,回合数)
    if 1 == ss1 or 1 == ss2:
         return    
    伤害=自己['攻击力']-对手['防御力']
    if 伤害 > 0:
        #回合结束时，伤害处理
        对手['生命值']-=伤害
        ss4 = 技能处理(自己,对手,回合数,'伤害计算后')
    print(自己['名字']+"对对手造成"+f"{伤害}"+"点伤害")
def 对抗(对战者a,对战者b):
    对战者1 = copy.deepcopy(对战者a)
    对战者2 = copy.deepcopy(对战者b)

    #对抗前的初始化操作
    回合数 = 0
    对战者1['生命值']=100
    对战者2['生命值']=100
    对战者1['状态']=''
    对战者2['状态']=''
    本回合对战者 = ''
    等待回合的对战者 = ''
    
    #确定先手攻击的对战者
    if 对战者1['速度']>对战者2['速度']:
        本回合对战者 = 对战者1
        等待回合的对战者 = 对战者2
    else:
        本回合对战者 = 对战者2
        等待回合的对战者 = 对战者1
    print(f"回合{回合数} 战斗开始，{对战者1['名字']} 对战 {对战者2['名字']}，"+f"{本回合对战者['名字']} 先手")
    
    while(0 < 对战者1['生命值'] and 0 < 对战者2['生命值']):
        #输出对局状态
        回合数+=1
        print(f"第{回合数}回合 ",end=' ')
        print(对战者1["名字"] + "的生命值:"+ "{hp}".format(hp=对战者1['生命值']),end= ' ')
        print(对战者2["名字"] + "的生命值:"+ "{hp}".format(hp=对战者2['生命值']))
        

        回合处理(本回合对战者,等待回合的对战者,回合数)
        本回合对战者,等待回合的对战者=等待回合的对战者,本回合对战者

        if (0 > 对战者1['生命值'] or 0 > 对战者2['生命值']):
            break

        回合处理(本回合对战者,等待回合的对战者,回合数)
        本回合对战者,等待回合的对战者=等待回合的对战者,本回合对战者
    if 对战者1['生命值']>0:
        return 对战者1
    else:
        return 对战者2


def main():
    对抗次数 = 1000
    胜利次数 = 0

    global 希儿,布洛妮娅,琪亚娜,樱莲组,芽衣,阿琳姐妹,幽兰黛儿

    for i in range(对抗次数):
        胜利者=对抗(琪亚娜,幽兰黛儿)
        print("胜利者:" + 胜利者['名字'])
        if 胜利者['名字'] == '琪亚娜':
            胜利次数+=1
    print(f'胜率={胜利次数/对抗次数*100:.2f}%')

if __name__ == "__main__":
    main()